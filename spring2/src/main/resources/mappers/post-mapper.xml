<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="com.itwill.spring2.repository.PostDao">
    <!-- posts 테이블 전체 검색. 목록 보기. -->
    <select id="selectOrderByIdDesc" resultType="Post">
      select * from posts order by id desc
    </select>
    
    <!-- posts 테이블에서 id(PK)로 검색. 상세보기. -->
    <select id="selectById" resultType="Post">
      select * from posts where id = #{id}
    </select>

    <!-- posts 테이블에 행 삽입. 새 글 작성. -->
     <insert id="insertPost">
      insert into posts (title, content, author) 
      values (#{title}, #{content}, #{author})
     </insert>

     <!-- posts 테이블에서 해당 id의 제목과 내용 업데이트. -->
     <update id="updatePost" >
      update posts set 
        title = #{title},
        content = #{content},
        modified_time=systimestamp
        where id = #{id}
     </update>

     <!-- posts 테이블에서 해당 id의 행을 삭제. -->
     <delete id="deletePost">
      delete from posts where id = #{id}
     </delete>

     <!-- posts 테이블에서 제목/내용/작성자로 검색. -->
     <select id="search" resultType="Post">
      <!-- 만들어야 할 sql 문장
        select * from posts 
        where upper(title) like upper('%tes%') 
        order by id desc' 
        ==> title 중에 대소문자 관계 없이 tes가 포함되어 있는 행 찾기.
        like 검색 시 검색어 앞 뒤로 퍼센트를 붙여야 검색어가 포함되어있는 걸 찾음.
      -->
      <bind name="searchKeyword" value="'%' + keyword +'%'" />
      select * from posts
      <where>
        <choose>
          <!-- test 값의 ''안의 코드는 자바의 코드임.
           자바의 코드에서 문자열은 ""로 함.
           마크업 랭귀지(xml, html 등)은 구분은 안하므로
           서로 다른걸로 묶어준겨 -->
          <when test='category.equals("t")'>
            upper(title) like upper(#{searchKeyword})
          </when>
          <when test='category.equals("c")'>
            upper(content) like upper(#{searchKeyword})
          </when>
          <when test='category.equals("tc")'>
                upper(title) like upper(#{searchKeyword})
                or
                upper(content) like upper(#{searchKeyword})
          </when>
          <when test='category.equals("a")'>
            upper(author) like upper(#{searchKeyword})
          </when>
        </choose>
      </where>
      <!-- 조건에 따라 다른 쿼리를 실행하는 이런 구조를 동적 쿼리라고 함. -->
       order by id desc
     </select>
     
  </mapper>