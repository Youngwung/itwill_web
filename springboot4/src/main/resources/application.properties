spring.application.name=springboot4
spring.output.ansi.enabled=always

#	DataSource 관련 설정:
# JDBC 드라이버 클래스 이름
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
# DB 접속 URL
spring.datasource.url=jdbc:oracle:thin:@localhost:1521:xe
# DB 접속 사용자 이름
spring.datasource.username=test
# DB 접속 비밀번호
spring.datasource.password=test

# 여기부터는 편의 기능
# JPA/Hibernate에서 DDL(create, drop, truncate, alter) 자동 실행 여부(비활성화 할거임)
# 이 값을 auto를 준 경우 데이터베이스 테이블을 자동으로 만들어줌.
# 우린 이미 테이블을 만들어 둔 상태라 끄는거임.
spring.jpa.hibernate.ddl-auto=create-drop

# JPA/hibernate에서 작성된 SQL 문장을 로그로 출력할 때 보기좋게 포맷팅.
spring.jpa.properties.hibernate.format_sql=true

# JPA/Hibernate에서 작성된 SQL 문장을 로그로 출력할 때 highlight(글자색).
spring.jpa.properties.hibernate.highlight_sql=true

# 로그 레벨(trace <  debug < info < warn < error < fatal)
# org.hibernate.SQL로 시작하는 패키지의 로그 레벨을 디버그로 설정(Default: info)
logging.level.org.hibernate.SQL=debug

# Hibernate에서 작성된 PreparedStatement의 바인딩 파라미터를 출력하기 위한 로그 레벨
# 바인딩파라미터: sql문장 작성할 때 ?에 들어가는 파라미터
# 관련 문서: Hibernate.org 사이트 => Documentation
logging.level.org.hibernate.orm.jdbc.bind=trace